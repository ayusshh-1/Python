
Working with Environment Variables in Windows using PowerShell and Python
=========================================================================
definition:An environment variable is a dynamic key-value pair used by the operating system and applications to store configuration data that can affect the behavior of processes. These variables can be accessed and used by the shell (e.g., PowerShell) and programming languages like Python.

Primary Purposes of Environment Variables
1. Convenience
Environment variables enable centralized and flexible configuration without requiring hardcoded values in scripts or applications. They streamline operational tasks by:

Allowing scripts to access shared paths (e.g., %PATH%, %TEMP%) or credentials without editing code.

2. Security
Environment variables serve as a basic mechanism for security through separation of secrets from codebases. For example:

Sensitive data such as API tokens, database credentials, and encryption keys can be stored in environment variables rather than embedded in source files.



1. Setting Environment Variables in PowerShell
----------------------------------------------
In PowerShell, you can set an environment variable using the following syntax:

    $env:VAR_NAME = "value"

Example:
    $env:MY_VAR = "HelloWorld"

This command sets the environment variable MY_VAR to the value "HelloWorld" for the current session.

2. Viewing Environment Variables in PowerShell
----------------------------------------------
To list all environment variables in PowerShell, use:

    dir Env:

This displays all the environment variables and their values.

To view a specific environment variable:

    $env:VAR_NAME

Example:
    $env:MY_VAR

3. Using Environment Variables in Python
----------------------------------------
Python allows you to access environment variables using the `os` module.

First, import the `os` module:

    import os

To get the value of an environment variable:

    var_name = os.environ.get("VAR_NAME")

Example:
    import os
    my_var = os.environ.get("MY_VAR")
    print(my_var)

If the environment variable does not exist, `os.environ.get()` returns `None`.

4. Notes
--------
- Environment variables set via PowerShell (`$env:VAR_NAME = "value"`) only persist for the current session.
- To make a variable permanent, you must set it via System Properties or registry.
- Pythonâ€™s `os.environ` allows you to both read and set environment variables for the current script execution.

