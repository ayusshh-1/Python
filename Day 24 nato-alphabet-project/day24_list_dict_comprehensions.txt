
Python Day 24: List and Dictionary Comprehensions

===========================
ðŸ“Œ LIST COMPREHENSIONS
===========================

List comprehensions provide a concise way to create lists.

ðŸ”¹ Basic Syntax:
    [expression for item in iterable if condition]

ðŸ”¹ Example 1: Create a list of squares from 1 to 5
    squares = [x**2 for x in range(1, 6)]
    Output: [1, 4, 9, 16, 25]

ðŸ”¹ Example 2: Get even numbers from a list
    nums = [1, 2, 3, 4, 5, 6]
    evens = [x for x in nums if x % 2 == 0]
    Output: [2, 4, 6]

ðŸ”¹ Example 3: Convert string to list of characters
    word = "hello"
    chars = [char for char in word]
    Output: ['h', 'e', 'l', 'l', 'o']


===============================
ðŸ“Œ DICTIONARY COMPREHENSIONS
===============================

Dictionary comprehensions allow you to construct dictionaries in a concise way.

ðŸ”¹ Basic Syntax:
    {key_expr: value_expr for item in iterable if condition}

ðŸ”¹ Example 1: Create a dictionary of squares
    squares = {x: x**2 for x in range(1, 6)}
    Output: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}

ðŸ”¹ Example 2: Create a dict from two lists
    keys = ['a', 'b', 'c']
    values = [1, 2, 3]
    result = {k: v for k, v in zip(keys, values)}
    Output: {'a': 1, 'b': 2, 'c': 3}

ðŸ”¹ Example 3: Filter dictionary by value
    nums = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
    filtered = {k: v for k, v in nums.items() if v % 2 == 0}
    Output: {'b': 2, 'd': 4}

===========================
âœ… TIP:
===========================
List/dict comprehensions are great for writing compact, readable code â€” but avoid making them too complex.

